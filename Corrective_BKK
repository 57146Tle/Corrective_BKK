<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Plan ‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á Corrective BKK</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
            color: white;
            padding: 30px;
            text-align: center;
            position: relative;
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .backup-info {
            position: absolute;
            top: 10px;
            right: 20px;
            background: rgba(255,255,255,0.1);
            padding: 10px;
            border-radius: 8px;
            font-size: 0.9em;
            backdrop-filter: blur(10px);
        }

        .controls {
            padding: 20px;
            background: #f8f9fa;
            border-bottom: 1px solid #e9ecef;
        }

        .filter-row {
            display: flex;
            gap: 15px;
            align-items: center;
            flex-wrap: wrap;
            margin-bottom: 15px;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .filter-group label {
            font-weight: 600;
            color: #2c3e50;
            font-size: 0.9em;
        }

        select, input {
            padding: 8px 12px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 14px;
            transition: border-color 0.3s;
        }

        select:focus, input:focus {
            outline: none;
            border-color: #3498db;
        }

        .add-form {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-top: 15px;
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .form-group label {
            font-weight: 600;
            color: #2c3e50;
        }

        .form-group input, .form-group textarea {
            padding: 10px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 14px;
            transition: border-color 0.3s;
        }

        .form-group textarea {
            resize: vertical;
            min-height: 60px;
        }

        .btn {
            padding: 12px 24px;
            background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
            color: white;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: transform 0.2s, box-shadow 0.2s;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }

        .btn-delete {
            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
            padding: 5px 10px;
            font-size: 12px;
        }

        .btn-edit {
            background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
            padding: 5px 10px;
            font-size: 12px;
            margin-right: 5px;
        }

        .btn-save {
            background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
            padding: 5px 10px;
            font-size: 12px;
            margin-right: 5px;
        }

        .btn-cancel {
            background: linear-gradient(135deg, #95a5a6 0%, #7f8c8d 100%);
            padding: 5px 10px;
            font-size: 12px;
            margin-right: 5px;
        }

        .btn-backup {
            background: linear-gradient(135deg, #9b59b6 0%, #8e44ad 100%);
            padding: 8px 16px;
            font-size: 12px;
            margin-left: 10px;
        }

        .btn-restore {
            background: linear-gradient(135deg, #16a085 0%, #1abc9c 100%);
            padding: 8px 16px;
            font-size: 12px;
            margin-left: 10px;
        }

        .btn-clear {
            background: linear-gradient(135deg, #e67e22 0%, #d35400 100%);
            padding: 8px 16px;
            font-size: 12px;
            margin-left: 10px;
        }

        .edit-input {
            width: 100%;
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 12px;
        }

        .edit-textarea {
            width: 100%;
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 12px;
            resize: vertical;
            min-height: 40px;
        }

        .table-container {
            overflow-x: auto;
            padding: 20px;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        th {
            background: linear-gradient(135deg, #34495e 0%, #2c3e50 100%);
            color: white;
            padding: 15px;
            text-align: left;
            font-weight: 600;
            position: sticky;
            top: 0;
            z-index: 10;
        }

        td {
            padding: 12px 15px;
            border-bottom: 1px solid #e9ecef;
            transition: background-color 0.3s;
        }

        tr:hover td {
            background-color: #f8f9fa;
        }

        .summary {
            padding: 20px;
            background: #f8f9fa;
            border-top: 1px solid #e9ecef;
        }

        .summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
        }

        .summary-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            text-align: center;
            transition: transform 0.3s;
        }

        .summary-card:hover {
            transform: translateY(-5px);
        }

        .summary-card h3 {
            color: #2c3e50;
            margin-bottom: 10px;
        }

        .summary-card .number {
            font-size: 2em;
            font-weight: bold;
            color: #3498db;
        }

        .no-data {
            text-align: center;
            padding: 40px;
            color: #7f8c8d;
            font-size: 1.2em;
        }

        .backup-section {
            margin-top: 15px;
            padding: 15px;
            background: #e8f4f8;
            border-radius: 10px;
            border-left: 4px solid #3498db;
        }

        .backup-section h4 {
            color: #2c3e50;
            margin-bottom: 10px;
        }

        .backup-buttons {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .file-input {
            display: none;
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 8px;
            color: white;
            font-weight: 600;
            z-index: 1000;
            opacity: 0;
            transform: translateY(-20px);
            transition: all 0.3s ease;
        }

        .notification.show {
            opacity: 1;
            transform: translateY(0);
        }

        .notification.success {
            background: linear-gradient(135deg, #27ae60 0%, #2ecc71 100%);
        }

        .notification.error {
            background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
        }

        .notification.info {
            background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
        }

        @media (max-width: 768px) {
            .filter-row {
                flex-direction: column;
                align-items: stretch;
            }
            
            .add-form {
                grid-template-columns: 1fr;
            }
            
            .header h1 {
                font-size: 2em;
            }

            .backup-info {
                position: static;
                margin-top: 10px;
                text-align: center;
            }

            .backup-buttons {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìä Plan ‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á Corrective BKK</h1>
            <p>‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô</p>
            <div class="backup-info">
                <div>üíæ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</div>
                <div id="lastSaved">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: -</div>
            </div>
        </div>

        <div class="controls">
            <div class="filter-row">
                <div class="filter-group">
                    <label for="yearFilter">‡∏õ‡∏µ:</label>
                    <select id="yearFilter">
                        <option value="">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="monthFilter">‡πÄ‡∏î‡∏∑‡∏≠‡∏ô:</label>
                    <select id="monthFilter">
                        <option value="">‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</option>
                        <option value="01">‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°</option>
                        <option value="02">‡∏Å‡∏∏‡∏°‡∏†‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡πå</option>
                        <option value="03">‡∏°‡∏µ‡∏ô‡∏≤‡∏Ñ‡∏°</option>
                        <option value="04">‡πÄ‡∏°‡∏©‡∏≤‡∏¢‡∏ô</option>
                        <option value="05">‡∏û‡∏§‡∏©‡∏†‡∏≤‡∏Ñ‡∏°</option>
                        <option value="06">‡∏°‡∏¥‡∏ñ‡∏∏‡∏ô‡∏≤‡∏¢‡∏ô</option>
                        <option value="07">‡∏Å‡∏£‡∏Å‡∏é‡∏≤‡∏Ñ‡∏°</option>
                        <option value="08">‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏°</option>
                        <option value="09">‡∏Å‡∏±‡∏ô‡∏¢‡∏≤‡∏¢‡∏ô</option>
                        <option value="10">‡∏ï‡∏∏‡∏•‡∏≤‡∏Ñ‡∏°</option>
                        <option value="11">‡∏û‡∏§‡∏®‡∏à‡∏¥‡∏Å‡∏≤‡∏¢‡∏ô</option>
                        <option value="12">‡∏ò‡∏±‡∏ô‡∏ß‡∏≤‡∏Ñ‡∏°</option>
                    </select>
                </div>
                <div class="filter-group">
                    <label for="searchInput">‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤:</label>
                    <input type="text" id="searchInput" placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...">
                </div>
                <div class="filter-group">
                    <button class="btn" onclick="exportToExcel()" style="background: linear-gradient(135deg, #f39c12 0%, #e67e22 100%);">
                        üìä Export Excel
                    </button>
                </div>
            </div>

            <div class="add-form">
                <div class="form-group">
                    <label for="dateInput">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:</label>
                    <input type="date" id="dateInput" required>
                </div>
                <div class="form-group">
                    <label for="timeInput">‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:</label>
                    <input type="time" id="timeInput" required>
                </div>
                <div class="form-group">
                    <label for="detailInput">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£:</label>
                    <textarea id="detailInput" placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô..." required></textarea>
                </div>
                <div class="form-group">
                    <label for="phoneInput">‡∏ä‡∏∑‡πà‡∏≠/‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:</label>
                    <input type="tel" id="phoneInput" placeholder="08x-xxx-xxxx">
                </div>
                <div class="form-group">
                    <label for="incidentInput">Incident:</label>
                    <input type="text" id="incidentInput" placeholder="‡∏£‡∏´‡∏±‡∏™ Incident">
                </div>
                <div class="form-group">
                    <label for="onsiteInput">‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà Onsite:</label>
                    <input type="text" id="onsiteInput" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà Onsite">
                </div>
                <div class="form-group">
                    <label for="receiverInput">‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á:</label>
                    <input type="text" id="receiverInput" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á">
                </div>
                <div class="form-group">
                    <button class="btn" onclick="addEntry()">‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</button>
                </div>
            </div>

            <div class="backup-section">
                <h4>üìÅ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h4>
                <div class="backup-buttons">
                    <button class="btn btn-backup" onclick="backupData()">
                        üíæ ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                    </button>
                    <button class="btn btn-restore" onclick="document.getElementById('fileInput').click()">
                        üìÅ ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                    </button>
                    <button class="btn btn-clear" onclick="clearAllData()">
                        üóëÔ∏è ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                    </button>
                    <input type="file" id="fileInput" class="file-input" accept=".json" onchange="restoreData(event)">
                </div>
            </div>
        </div>

        <div class="table-container">
            <table id="workTable">
                <thead>
                    <tr>
                        <th>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                        <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</th>
                        <th>‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</th>
                        <th>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</th>
                        <th>‡∏ä‡∏∑‡πà‡∏≠/‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</th>
                        <th>Incident</th>
                        <th>‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà Onsite</th>
                        <th>‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á</th>
                        <th>‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</th>
                    </tr>
                </thead>
                <tbody id="tableBody">
                    <tr>
                        <td colspan="9" class="no-data">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏á‡∏≤‡∏ô</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="summary">
            <div class="summary-grid">
                <div class="summary-card">
                    <h3>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h3>
                    <div class="number" id="totalCount">0</div>
                </div>
                <div class="summary-card">
                    <h3>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ</h3>
                    <div class="number" id="monthCount">0</div>
                </div>
                <div class="summary-card">
                    <h3>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ</h3>
                    <div class="number" id="todayCount">0</div>
                </div>
            </div>
        </div>
    </div>

    <div id="notification" class="notification"></div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script>
        let workEntries = [];
        let currentId = 1;
        let editingId = null;

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        function showNotification(message, type = 'success') {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.className = `notification ${type}`;
            notification.classList.add('show');
            
            setTimeout(() => {
                notification.classList.remove('show');
            }, 3000);
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á localStorage
        function saveDataToLocal() {
            try {
                const dataToSave = {
                    workEntries: workEntries,
                    currentId: currentId,
                    lastSaved: new Date().toLocaleString('th-TH')
                };
                localStorage.setItem('workTrackingData', JSON.stringify(dataToSave));
                
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                document.getElementById('lastSaved').textContent = 
                    `‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${dataToSave.lastSaved}`;
                
                return true;
            } catch (error) {
                console.error('Error saving data:', error);
                showNotification('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', 'error');
                return false;
            }
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å localStorage
        function loadDataFromLocal() {
            try {
                const savedData = localStorage.getItem('workTrackingData');
                if (savedData) {
                    const parsedData = JSON.parse(savedData);
                    workEntries = parsedData.workEntries || [];
                    currentId = parsedData.currentId || 1;
                    
                    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                    if (parsedData.lastSaved) {
                        document.getElementById('lastSaved').textContent = 
                            `‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${parsedData.lastSaved}`;
                    }
                    
                    // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç currentId ‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
                    if (workEntries.length > 0) {
                        const maxId = Math.max(...workEntries.map(entry => entry.id));
                        currentId = maxId + 1;
                    }
                    
                    return true;
                }
            } catch (error) {
                console.error('Error loading data:', error);
                showNotification('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', 'error');
            }
            return false;
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        function backupData() {
            if (workEntries.length === 0) {
                showNotification('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏≥‡∏£‡∏≠‡∏á', 'error');
                return;
            }

            const backupData = {
                workEntries: workEntries,
                currentId: currentId,
                backupDate: new Date().toISOString(),
                version: '1.0'
            };

            const dataStr = JSON.stringify(backupData, null, 2);
            const dataBlob = new Blob([dataStr], { type: 'application/json' });
            
            const today = new Date();
            const dateStr = `${today.getFullYear()}-${String(today.getMonth() + 1).padStart(2, '0')}-${String(today.getDate()).padStart(2, '0')}`;
            const timeStr = `${String(today.getHours()).padStart(2, '0')}-${String(today.getMinutes()).padStart(2, '0')}`;
            const filename = `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏≤‡∏ô_${dateStr}_${timeStr}.json`;

            const link = document.createElement('a');
            link.href = URL.createObjectURL(dataBlob);
            link.download = filename;
            link.click();
            
            showNotification('‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        function restoreData(event) {
            const file = event.target.files[0];
            if (!file) return;

            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const backupData = JSON.parse(e.target.result);
                    
                    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                    if (!backupData.workEntries || !Array.isArray(backupData.workEntries)) {
                        throw new Error('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
                    }

                    // ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô
                    if (confirm(`‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?\n\n‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${workEntries.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå: ${backupData.workEntries.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà!`)) {
                        workEntries = backupData.workEntries;
                        currentId = backupData.currentId || 1;
                        
                        // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç currentId ‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
                        if (workEntries.length > 0) {
                            const maxId = Math.max(...workEntries.map(entry => entry.id));
                            currentId = maxId + 1;
                        }
                        
                        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
                        saveDataToLocal();
                        updateDisplay();
                        updateYearFilter();
                        updateSummary();
                        
                        showNotification(`‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! ‡πÇ‡∏´‡∏•‡∏î ${workEntries.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`, 'success');
                    }
                } catch (error) {
                    console.error('Error restoring data:', error);
                    showNotification('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡πÑ‡∏ü‡∏•‡πå‡∏≠‡∏≤‡∏à‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢', 'error');
                }
            };
            reader.readAsText(file);
            
            // ‡∏•‡πâ‡∏≤‡∏á‡∏Ñ‡πà‡∏≤ input
            event.target.value = '';
        }

        // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        function clearAllData() {
            if (workEntries.length === 0) {
                showNotification('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏•‡πâ‡∏≤‡∏á', 'info');
                return;
            }

            if (confirm(`‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î?\n\n‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${workEntries.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ!`)) {
                workEntries = [];
                currentId = 1;
                editingId = null;
                
                // ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å localStorage
                localStorage.removeItem('workTrackingData');
                
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
                updateDisplay();
                updateYearFilter();
                updateSummary();
                
                document.getElementById('lastSaved').textContent = '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: -';
                showNotification('‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'info');
            }
        }

        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        document.getElementById('dateInput').valueAsDate = new Date();

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà
        function addEntry() {
            const date = document.getElementById('dateInput').value;
            const time = document.getElementById('timeInput').value;
            const detail = document.getElementById('detailInput').value;
            const phone = document.getElementById('phoneInput').value;
            const incident = document.getElementById('incidentInput').value;
            const onsite = document.getElementById('onsiteInput').value;
            const receiver = document.getElementById('receiverInput').value;

            if (!date || !time || !detail) {
                showNotification('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ‡πÄ‡∏ß‡∏•‡∏≤ ‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£', 'error');
                return;
            }

            const entry = {
                id: currentId++,
                date: date,
                time: time,
                detail: detail,
                phone: phone,
                incident: incident,
                onsite: onsite,
                receiver: receiver
            };

            workEntries.push(entry);
            
            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            if (saveDataToLocal()) {
                showNotification('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
            }
            
            // ‡∏•‡πâ‡∏≤‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°
            document.getElementById('timeInput').value = '';
            document.getElementById('detailInput').value = '';
            document.getElementById('phoneInput').value = '';
            document.getElementById('incidentInput').value = '';
            document.getElementById('onsiteInput').value = '';
            document.getElementById('receiverInput').value = '';
            
            updateDisplay();
            updateYearFilter();
            updateSummary();
        }

        // ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        function deleteEntry(id) {
            if (confirm('‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                workEntries = workEntries.filter(entry => entry.id !== id);
                editingId = null;
                
                // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                if (saveDataToLocal()) {
                    showNotification('‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
                }
                
                updateDisplay();
                updateSummary();
            }
        }

        // ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
        function editEntry(id) {
            if (editingId !== null && editingId !== id) {
                cancelEdit();
            }
            editingId = id;
            updateDisplay();
        }

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        function saveEdit(id) {
            const entry = workEntries.find(entry => entry.id === id);
            if (!entry) return;

            const date = document.getElementById(`edit-date-${id}`).value;
            const time = document.getElementById(`edit-time-${id}`).value;
